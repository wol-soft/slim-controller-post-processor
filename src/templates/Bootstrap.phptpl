<?php

declare(strict_types = 1);

{% if namespace %}
    namespace {{ namespace }};
{% endif %}

use Psr\Http\Message\ResponseInterface as Response;
use Psr\Http\Message\ServerRequestInterface as Request;
use Slim\App;

class BootstrapGeneratedControllers
{
    public function bootstrap(App $app, string $routePrefix = ''): void
    {
        {% foreach controllers as routeGroup, fqcn %}
            $app->group("$routePrefix/{{ routeGroup }}", function (App $app) {
                $app->get('', function (Request $request, Response $response) use ($app): Response {
                    return $app->getContainer()->get({{ fqcn }}::class)->getAll($response);
                });
                $app->get('/{id}', function (Request $request, Response $response, $args) use ($app): Response {
                    return $app->getContainer()->get({{ fqcn }}::class)->get($args['id'], $response);
                });
                $app->put('', function (Request $request, Response $response) use ($app): Response {
                    return $app->getContainer()->get({{ fqcn }}::class)->create($request, $response);
                });
                $app->post('/{id}', function (Request $request, Response $response, $args) use ($app): Response {
                    return $app->getContainer()->get({{ fqcn }}::class)->update($args['id'], $request, $response);
                });
                $app->delete('/{id}', function (Request $request, Response $response, $args) use ($app): Response {
                    return $app->getContainer()->get({{ fqcn }}::class)->delete($args['id'], $response);
                });
            });
        {% endforeach %}
    }
}